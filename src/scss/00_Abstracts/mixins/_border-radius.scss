@import '../variables';

@mixin r($size: sm, $important: false) {
    @include rt($size, $important);
    @include rb($size, $important);
}

@mixin rt($size: sm, $important: false) {
    @include rtl($size, $important);
    @include rtr($size, $important);
}

@mixin rb($size: sm, $important: false) {
    @include rbl($size, $important);
    @include rr($size, $important);
}

@mixin rl($size: sm, $important: false) {
    @include rtl($size, $important);
    @include rbl($size, $important);
}

@mixin rr($size: sm, $important: false) {
    @include rtr($size, $important);
    @include rr($size, $important);
}

@mixin rtl($size: sm, $important: false) {
    @if map-has-key($border-radiuses, $size) {
        @if($important==true) {
            border-top-left-radius: var(--ks-border-radius-#{$size}) !important;
        }

        @else {
            border-top-left-radius: var(--ks-border-radius-#{$size});
        }
    }

    @else {
        @error "Invalid border-radius size: '#{$size}'.";
    }
}

@mixin rtr($size: sm, $important: false) {
    @if map-has-key($border-radiuses, $size) {
        @if($important==true) {
            border-top-right-radius: var(--ks-border-radius-#{$size}) !important;
        }

        @else {
            border-top-right-radius: var(--ks-border-radius-#{$size});
        }
    }

    @else {
        @error "Invalid border-radius size: '#{$size}'.";
    }
}

@mixin rbl($size: sm, $important: false) {
    @if map-has-key($border-radiuses, $size) {
        @if($important==true) {
            border-bottom-left-radius: var(--ks-border-radius-#{$size}) !important;
        }

        @else {
            border-bottom-left-radius: var(--ks-border-radius-#{$size});
        }
    }

    @else {
        @error "Invalid border-radius size: '#{$size}'.";
    }
}

@mixin rr($size: sm, $important: false) {
    @if map-has-key($border-radiuses, $size) {
        @if($important==true) {
            border-bottom-right-radius: var(--ks-border-radius-#{$size}) !important;
        }

        @else {
            border-bottom-right-radius: var(--ks-border-radius-#{$size});
        }
    }

    @else {
        @error "Invalid border-radius size: '#{$size}'.";
    }
}


@mixin r-var($size: sm, $important: false) {
    @include rt-var($size, $important);
    @include rb-var($size, $important);
}

@mixin rt-var($size: sm, $important: false) {
    @include rtl-var($size, $important);
    @include rtr-var($size, $important);
}

@mixin rb-var($size: sm, $important: false) {
    @include rbl-var($size, $important);
    @include rr-var($size, $important);
}

@mixin rl-var($size: sm, $important: false) {
    @include rtl-var($size, $important);
    @include rbl-var($size, $important);
}

@mixin rr-var($size: sm, $important: false) {
    @include rtr-var($size, $important);
    @include rr-var($size, $important);
}

@mixin rtl-var($size: sm, $important: false) {
    @if($important==true) {
        border-top-left-radius: var($size) !important;
    }

    @else {
        border-top-left-radius: var($size);
    }
}

@mixin rtr-var($size: sm, $important: false) {
    @if($important==true) {
        border-top-right-radius: var($size) !important;
    }

    @else {
        border-top-right-radius: var($size);
    }
}

@mixin rbl-var($size: sm, $important: false) {
    @if($important==true) {
        border-bottom-left-radius: var($size) !important;
    }

    @else {
        border-bottom-left-radius: var($size);
    }
}

@mixin rr-var($size: sm, $important: false) {
    @if($important==true) {
        border-bottom-right-radius: var($size) !important;
    }

    @else {
        border-bottom-right-radius: var($size);
    }
}

@use "sass:math";

@use "../../../scss/00_Abstracts/index" as *;

$columns: 12;
$breakpoints: (xl, lg, md, sm, xs, xxs);

.ks-grid {
    display: flex;
    flex-wrap: wrap;
    flex-basis: 0;
    flex-grow: 1;

    @each $bp, $value in $spacing-sizes {
        @if not $value == auto {
            $gutter-size: $value * 0.5;

            &.gutter-#{$bp} {
                margin-left: -$gutter-size;
                margin-right: -$gutter-size;

                >.col {
                    padding-left: $gutter-size;
                    padding-right: $gutter-size;
                }
            }
        }
    }

    &.align-content {
        &-start {
            .col {
                align-self: flex-start;
            }
        }

        &-center {
            .col {
                align-self: center;
            }
        }

        &-end {
            .col {
                align-self: flex-end;
            }
        }

        &-stretch {
            .col {
                align-self: stretch;
            }
        }
    }

    .col {
        position: relative;
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
        width: 100%;

        @for $i from 1 through $columns {
            &.col-#{$i} {
                max-width: math.div(100%, $columns) * $i;
                flex: 0 0 math.div(100%, $columns) * $i;
            }
        }

        @for $i from 1 through $columns {

            @each $bp in $breakpoints {
                @include mq($bp) {
                    &.#{$bp}\:col-#{$i} {
                        max-width: math.div(100%, $columns) * $i;
                        flex: 0 0 math.div(100%, $columns) * $i;
                    }
                }
            }
        }


        &.align-items {
            &-start {
                align-self: flex-start;
            }

            &-center {
                align-self: center;
            }

            &-end {
                align-self: flex-end;
            }

            &-stretch {
                align-self: stretch;
            }
        }
    }
}
